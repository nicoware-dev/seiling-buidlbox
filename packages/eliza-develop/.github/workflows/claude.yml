name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"

          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"

          # Allow Claude to run specific commands including GitHub CLI for issue management
          allowed_tools: "Bash(bun install),Bash(bun run build),Bash(bun test),Bash(bun run test),Bash(bun run lint),Bash(bun run format),Bash(gh *)"

          # Custom instructions for Claude to handle ElizaOS standards
          custom_instructions: |
            Follow ElizaOS coding standards from CLAUDE.md
            Use bun exclusively (never npm, pnpm, yarn, or npx)
            For testing:
            - Use bun:test for all unit tests, integration tests, and backend tests
            - Cypress is ONLY acceptable for frontend UI testing in packages/client
            - Never use jest, vitest, mocha, or other test frameworks except Cypress for UI
            When creating GitHub issues, use proper labels and formatting
            Check workflow logs using gh run view <run-id> --log for details

          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test
