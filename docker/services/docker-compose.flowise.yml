services:
  flowise:
    image: flowiseai/flowise:latest
    container_name: seiling-flowise
    restart: unless-stopped
    environment:
      - ENABLE_FLOWISE=${ENABLE_FLOWISE:-yes}
      - PORT=3001
      - FLOWISE_USERNAME=${FLOWISE_USERNAME:-admin}
      - FLOWISE_PASSWORD=${FLOWISE_PASSWORD:-seiling123}
      - DATABASE_PATH=/root/.flowise
      - APIKEY_PATH=/root/.flowise
      - LOG_PATH=/root/.flowise/logs
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
    volumes:
      - flowise_storage:/root/.flowise
    ports:
      - "${FLOWISE_PORT:-5003}:3001"
    networks:
      - seiling_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flowise.rule=Host(`${FLOWISE_SUBDOMAIN:-flowise}.${BASE_DOMAIN_NAME:-localhost}`)"
      - "traefik.http.routers.flowise.entrypoints=websecure"
      - "traefik.http.routers.flowise.tls.certresolver=myresolver"
      - "traefik.http.services.flowise.loadbalancer.server.port=3001"
    entrypoint: >
      sh -c 'if [ "$ENABLE_FLOWISE" = "yes" ] || [ "$ENABLE_FLOWISE" = "true" ]; then /bin/sh -c "sleep 3; flowise start"; else echo "Flowise disabled by ENABLE_FLOWISE=$ENABLE_FLOWISE"; sleep infinity; fi' 