services:
  n8n:
    image: n8nio/n8n:latest
    container_name: seiling-n8n
    restart: unless-stopped
    environment:
      # Service Control
      - ENABLE_N8N=${ENABLE_N8N:-yes}
      
      # Core Settings
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - NODE_ENV=production
      - GENERIC_TIMEZONE=${TIMEZONE:-UTC}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-seiling-encryption-key}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET:-seiling-jwt-secret}
      
      # Database Configuration - SQLite
      - DB_TYPE=sqlite
      - DB_SQLITE_DATABASE=/home/node/.n8n/database.sqlite
      - DB_SQLITE_POOL_SIZE=10
      - DB_SQLITE_VACUUM_ON_STARTUP=true
      
      # Redis for Queue Mode
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD:-seiling123}
      
      # Execution Data Saving
      - EXECUTIONS_DATA_SAVE_ON_SUCCESS=${EXECUTIONS_DATA_SAVE_ON_SUCCESS:-all}
      - EXECUTIONS_DATA_SAVE_ON_ERROR=${EXECUTIONS_DATA_SAVE_ON_ERROR:-all}
      - EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS=${EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS:-true}
      - EXECUTIONS_DATA_SAVE_ON_PROGRESS=false
      - EXECUTIONS_DATA_PRUNE=true
      - EXECUTIONS_DATA_MAX_AGE=168
      - EXECUTIONS_DATA_PRUNE_MAX_COUNT=10000
      
      # Queue Mode & Workers
      - EXECUTIONS_PROCESS=${EXECUTIONS_PROCESS:-queue}
      
      # Webhook & Tunnel
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678/}
      
      # Community Nodes
      - N8N_ENABLE_COMMUNITY_NODES=${N8N_ENABLE_COMMUNITY_NODES:-true}
      
      # Other Settings
      - N8N_METRICS=${N8N_METRICS:-true}
      - NODE_FUNCTION_ALLOW_EXTERNAL=${NODE_FUNCTION_ALLOW_EXTERNAL:-*}
      - N8N_LOG_LEVEL=${LOG_LEVEL:-info}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_DISABLE_PRODUCTION_MAIN_PROCESS=false
      - N8N_SECURE_COOKIE=false
      - N8N_PATH=${N8N_PATH:-/}
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./shared:/data/shared
    ports:
      - "${N8N_PORT:-5001}:5678"
    networks:
      - seiling_network
    depends_on:
      redis:
        condition: service_started

    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`${N8N_SUBDOMAIN:-n8n}.${BASE_DOMAIN_NAME:-localhost}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=myresolver"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    entrypoint: >
      sh -c '
      if [ "$ENABLE_N8N" = "yes" ] || [ "$ENABLE_N8N" = "true" ]; then
        echo "Starting n8n with SQLite database...";
        exec docker-entrypoint.sh n8n;
      else 
        echo "n8n disabled by ENABLE_N8N=$ENABLE_N8N"; 
        sleep infinity; 
      fi
      ' 