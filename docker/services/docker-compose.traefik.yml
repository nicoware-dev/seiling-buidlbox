services:
  traefik:
    image: traefik:v3.0
    container_name: seiling-traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --api.debug=false
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=${TRAEFIK_EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
      - "${TRAEFIK_PORT:-8080}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - seiling_network
    environment:
      - TRAEFIK_EMAIL=${TRAEFIK_EMAIL}
      - SSL_ENABLED=${SSL_ENABLED:-true}
      - SSL_EMAIL=${SSL_EMAIL}
      - SSL_RESOLVER=${SSL_RESOLVER:-letsencrypt}
      - ENABLE_TRAEFIK=${ENABLE_TRAEFIK:-yes}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${BASE_DOMAIN_NAME}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
    entrypoint: >
      sh -c 'if [ "$ENABLE_TRAEFIK" = "yes" ] || [ "$ENABLE_TRAEFIK" = "true" ]; then exec traefik; else echo "Traefik disabled by ENABLE_TRAEFIK=$ENABLE_TRAEFIK"; sleep infinity; fi' 